-- Define the list of allowed user IDs
local allowedIDs = {5427524689, 5437454370, 1809192714, 3602779244, 3490435878, 5257463884, 2507122031, 2649957141, 5269097908, 2689474729}

-- Get the ID of the local player
local userID = game.Players.LocalPlayer.UserId

-- Check if the ID is in the list of allowed IDs
local isAllowed = false
for _, id in ipairs(allowedIDs) do
    if userID == id then
        isAllowed = true
        break
    end
end

-- Debugging: print the value of isAllowed to the console
print("isAllowed:", isAllowed)

-- Execute the script depending on whether the ID is allowed or not
if isAllowed then

-- Load the OrionLib library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Create a new window with the specified settings
local Window = OrionLib:MakeWindow({
  Name = "DOS Library",
  HidePremium = false,
  SaveConfig = true,
  ConfigFolder = "MyConfigFolder",
  IntroEnabled = false,
  Icon = "https://www.roblox.com/Thumbs/Avatar.ashx?x=100&y=100&userid=1",
})

-- Create a new tab in the window
local myTab = Window:MakeTab({
  Name = "Information",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Add a paragraph to the new tab
myTab:AddParagraph("For Mobile !", "This opens a keybaord to hide and unhide the gui")

-- Add a button to the new tab
myTab:AddButton({
  Name = "keybaord",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()
  end,
})

-- Add a paragraph to the new tab
myTab:AddParagraph("Join Any Team", "press team name from drop down to join")

-- Add a dropdown menu to the tab
local teamDropdown = myTab:AddDropdown({
  Name = "Team",
  Default = "Select a team",
  Options = {},
  Callback = function(value)
    -- Join the selected team
    local args = {
      [1] = {
        ["teamIcon"] = "",
        ["action"] = "accepted",
        ["teamName"] = value
      }
    }
    game:GetService("ReplicatedStorage"):WaitForChild("invitationEvent"):FireServer(unpack(args))
  end,
})

-- Define a function to update the dropdown menu with the current teams in the game
local function updateTeamsDropdown()
  local teams = {}
  for _, team in pairs(game.Workspace.Teams:GetChildren()) do
    table.insert(teams, team.Name)
  end
  teamDropdown:Refresh(teams, true)
end

-- Call the updateTeamsDropdown() function once to initially populate the dropdown menu
updateTeamsDropdown()

-- Add a paragraph to the new tab
myTab:AddParagraph("⚠️ Important ⚠️", "The chat spy in the other tab does get private messages just doesn't change the color")

-- Create a new tab in the window
local autofarmTab = Window:MakeTab({
  Name = "autofarm",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Add buttons to the new tab
autofarmTab:AddButton({
  Name = "Oni Hub",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/exposed/main/Untitled.112.txt'))()
  end,
})

autofarmTab:AddButton({
  Name = "Crow Hub",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/CrowzScripts/AnimalSim/main/CrowOnTop"))()
  end,
})

autofarmTab:AddButton({
  Name = "Rip Hub",
  Callback = function()
    _G.RedGUI = true
    _G.Theme = "Dark" -- Must disable or remove _G.RedGUI to use
    --Themes: Light, Dark, Mocha, Aqua and Jester

    loadstring(game:HttpGet("https://raw.githubusercontent.com/CasperFlyModz/discord.gg-rips/main/AnimalSimulator.lua"))()
  end,
})

-- Add a button to the new tab
autofarmTab:AddButton({
  Name = "Level Tracker [ currently offline ]",
  Callback = function()
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/amagineLost/level-tracker-/main/Protected.lua%20(12).txt')))()
  end,
})

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local killTab = Window:MakeTab({
  Name = "Sit on any player",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

local playerList = {}
for _, player in ipairs(game.Players:GetPlayers()) do
    table.insert(playerList, player.Name)
end

local selectedPlayerName = ""

-- Function to get the player's leaderstat value
local function getPlayerLevel(player)
    local leaderstats = player:FindFirstChild("leaderstats")
    if leaderstats then
        local level = leaderstats:FindFirstChild("Level")
        if level then
            return level.Value
        end
    end
    return nil
end

killTab:AddDropdown({
    Name = "PlayerDropdown",
    Default = "",
    Options = playerList,
    Callback = function(selectedPlayer)
        selectedPlayerName = selectedPlayer
        print("Selected player:", selectedPlayerName)

        local player = game.Players:FindFirstChild(selectedPlayerName)
        if player then
            local levelValue = getPlayerLevel(player)
            if levelValue then
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "Notification Title",
                    Text = "Player " .. selectedPlayerName .. " Level: " .. levelValue,
                    Icon = "rbxassetid://1234567890",
                    Duration = 6 -- Set the duration in seconds
                })
            else
                print(selectedPlayerName .. " does not have a Level value.")
            end
        else
            print("Player " .. selectedPlayerName .. " not found.")
        end
    end    
})

killTab:AddButton({
    Name = "Sit",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        
        local targetPlayerName = selectedPlayerName
        
        local targetPlayer = game.Players:FindFirstChild(targetPlayerName)
        if targetPlayer then
            character:SetPrimaryPartCFrame(targetPlayer.Character.PrimaryPart.CFrame)

            wait(0)

            local args = {
                [1] = game:GetService("Players"):WaitForChild(targetPlayerName),
                [2] = "request_accepted"
            }
            
            local remote = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CarryEvent")
            remote:FireServer(unpack(args))
        else
            print("Could not find player with username: " .. targetPlayerName)
        end
    end
})

killTab:AddButton({
    Name = "kill",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        
        local targetPlayerName = selectedPlayerName
        
        local targetPlayer = game.Players:FindFirstChild(targetPlayerName)
        if targetPlayer then
            character:SetPrimaryPartCFrame(targetPlayer.Character.PrimaryPart.CFrame)

            wait(0)

            local args = {
                [1] = game:GetService("Players"):WaitForChild(targetPlayerName),
                [2] = "request_accepted"
            }
            
            local remote = game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CarryEvent")
            remote:FireServer(unpack(args))

            -- Firing the new remote event instead of resetting health
            local newArgs = {
                [1] = game:GetService("Players"):WaitForChild("AltCodexAlpha").Character.Humanoid,
                [2] = 16
            }

            game:GetService("ReplicatedStorage"):WaitForChild("jdskhfsIIIllliiIIIdchgdIiIIIlIlIli"):FireServer(unpack(newArgs))

        else
            print("Could not find player with username: " .. targetPlayerName)
        end
    end
})

killTab:AddButton({
    Name = "dmg health",
    Callback = function()
        local newArgs = {
            [1] = game:GetService("Players"):WaitForChild("AltCodexAlpha").Character.Humanoid,
            [2] = 16
        }

        game:GetService("ReplicatedStorage"):WaitForChild("jdskhfsIIIllliiIIIdchgdIiIIIlIlIli"):FireServer(unpack(newArgs))
    end
})

-- Create a new tab in the window
local otherTab = Window:MakeTab({
  Name = "Other",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

otherTab:AddButton({
  Name = "FlashBack",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/0Ben1/fe./main/L"))()
  end,
})

otherTab:AddButton({
  Name = "Nameless Admin",
  Callback = function()
    --[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
loadstring(game:HttpGet('https://gist.github.com/inuk84/ca841931f45f242c945405298b26bd71/raw/af364e5d4ea5b0d2eac404a5376d83c84a23cbe4/na.lua'))()
  end,
})

otherTab:AddButton({
  Name = "Search Gui",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/lostbunny489/search-/main/Code'))()
  end,
})

otherTab:AddButton({
  Name = "Iv admin",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/BloodyBurns/Hex/main/Iv%20Admin%20v2.lua'))()
  end,
})

otherTab:AddButton({
  Name = "IceHub",
  Callback = function()
    loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-Ice-Hub-6414"))()
  end,
})

otherTab:AddButton({
  Name = "chatspy",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/amagineLost/Jsjsbs/main/Chatspy", true))()
  end,
})

-- Create a new tab in the window
local adminTab = Window:MakeTab({
  Name = "Admin / Hubs",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

adminTab:AddButton({
  Name = "Infinite yeild",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  end,
})

adminTab:AddButton({
  Name = "Nothing",
  Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/toldblock/GelatekHub/main/Main.lua'))()
  end,
})

-- Create a new tab in the window
local roleTab = Window:MakeTab({
  Name = "roleplay name",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

roleTab:AddTextbox({
	Name = "Name Imput",
	Default = "type name here",
	TextDisappear = false,
	Callback = function(text)
		roleplayName = text
	end	  
})

roleTab:AddButton({
  Name = "Apply Name",
  Callback = function()

      -- Check if the roleplay name is longer than 100 characters
      if string.len(roleplayName) > 100 then
         roleplayName = string.sub(roleplayName, 1, 100) -- Truncate the name to 100 characters
      end

      -- Call the server event with the roleplay name argument
      local args = {
         [1] = roleplayName,
         [2] = "player"
      }

      game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("nameEvent"):FireServer(unpack(args))
   end,
})

-- Assuming Window, getPlayerLevel function, and playerList are defined elsewhere

-- Create a new tab in the window
local InfoTab = Window:MakeTab({
  Name = "Info",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Create a variable to store the reference to the level paragraph
local levelParagraph

-- Define the dropdown and its callback function
InfoTab:AddDropdown({
    Name = "PlayerDropdown",
    Default = "",
    Options = playerList,
    Callback = function(selectedPlayer)
        -- Store the selected player's name
        local selectedPlayerName = selectedPlayer
        print("Selected player:", selectedPlayerName)

        -- Find the player object based on the selected player's name
        local player = game.Players:FindFirstChild(selectedPlayerName)
        if player then
            -- Get the level of the selected player
            local levelValue = getPlayerLevel(player)
            if levelValue then
                -- If paragraph does not exist, create it. Otherwise, update the text.
                if not levelParagraph then
                    levelParagraph = InfoTab:AddParagraph("Level:", levelValue)
                else
                    levelParagraph:SetText("Level: " .. levelValue)
                end
            else
                print(selectedPlayerName .. " does not have a Level value.")
            end
        else
            print("Player " .. selectedPlayerName .. " not found.")
        end
    end    
})

-- Create a new tab in the window
local creditTab = Window:MakeTab({
  Name = "Credits / help",
  Icon = "rbxassetid://123456789",
  PremiumOnly = false,
})

-- Add a paragraph to the new tab
creditTab:AddParagraph("Script developer", "Lost")

-- Add a paragraph to the new tab
creditTab:AddParagraph("Roblox User", "Itsjustmefriendly1")

-- Add a paragraph to the new tab
creditTab:AddParagraph("For Help", "Ask moderation in discord server")

-- Set up a loop to update the dropdown menu every second
while true do
  wait(1)
  updateTeamsDropdown()
end 

else
 game:GetService("Players").LocalPlayer:Kick("Do not access to Scripts")
end 
